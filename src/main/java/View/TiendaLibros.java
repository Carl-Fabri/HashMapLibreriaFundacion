/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.TiendaLibrosController;
import Model.Book;
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Carlos Fabricio
 */
public class TiendaLibros extends javax.swing.JFrame {
    
    //HashMap<String, Book> miHashMap = new HashMap<>();
    TiendaLibrosController tndLbrController = new TiendaLibrosController();
    DefaultTableModel model;
    
    boolean isEditMode = false;
    boolean isFilterMode = false;
    
    TableRowSorter<TableModel> rowSorter;
    
    /**
     * Creates new form TiendaLibros
     */
    public TiendaLibros() {
        initComponents();
        //miHashMap = new HashMap<>();
        model = (DefaultTableModel)tbBooks.getModel();
        rowSorter = new TableRowSorter<>(tbBooks.getModel());
        tbBooks.setRowSorter(rowSorter);
        
        tndLbrController = new TiendaLibrosController();
        tndLbrController.loadDefaultBooks();
        
        ShowBooks();
        
        tbBooks.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            isEditMode = true;
            int selectedRow = tbBooks.getSelectedRow();
            
            if (selectedRow >= 0) {
               txtTitle.setText(tbBooks.getValueAt(selectedRow, 1).toString());
               txtAuthor.setText(tbBooks.getValueAt(selectedRow, 2).toString());
               txtEditorial.setText(tbBooks.getValueAt(selectedRow, 3).toString());
               btnInsertTitle.setText("Cancelar");
            }
        }
        });
        
                // Añadir DocumentListener a los JTextField
        txtFilterAuthor.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                filterTable();
            }
            public void removeUpdate(DocumentEvent e) {
                filterTable();
            }
            public void changedUpdate(DocumentEvent e) {
                filterTable();
            }
        });
        
        txtFilterTitle.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                filterTable();
            }
            public void removeUpdate(DocumentEvent e) {
                filterTable();
            }
            public void changedUpdate(DocumentEvent e) {
                filterTable();
            }
        });
        
        txtFilterEditorial.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                filterTable();
            }
            public void removeUpdate(DocumentEvent e) {
                filterTable();
            }
            public void changedUpdate(DocumentEvent e) {
                filterTable();
            }
        });
    }
    
    public void ShowBooks(){
        model.setRowCount(0);
        for (Map.Entry<String, Book> entry : tndLbrController.getBookMap().entrySet()) {
            String key = entry.getKey();
            Book newBook = entry.getValue();
            model.addRow(new Object[]{key, newBook.getAuthor(), newBook.getTitle(), newBook.getEditorial()});
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnInsertTitle = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBooks = new javax.swing.JTable();
        txtEditorial = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFilterAuthor = new javax.swing.JTextField();
        txtFilterTitle = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtFilterEditorial = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMinimumSize(new java.awt.Dimension(700, 450));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 450));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Autor:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, -1, -1));
        jPanel1.add(txtTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 130, -1));

        jLabel5.setText("Titulo:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, -1, -1));
        jPanel1.add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, 130, -1));

        btnUpdate.setText("Actualizar");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 360, 190, -1));

        btnInsertTitle.setText("Ingresar titulo");
        btnInsertTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertTitleActionPerformed(evt);
            }
        });
        jPanel1.add(btnInsertTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 190, -1));

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 390, 190, -1));

        tbBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Autor", "Titulo", "Editorial"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbBooks);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 620, 180));
        jPanel1.add(txtEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, 130, -1));

        jLabel6.setText("Editorial:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 360, -1, -1));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel1.setText("Libreria");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel2.setText("\"La Fundación\"");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 0, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 700, 50));

        jLabel4.setText("Autor:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));
        jPanel1.add(txtFilterAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 130, -1));
        jPanel1.add(txtFilterTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 130, -1));

        jLabel7.setText("Titulo:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, -1));
        jPanel1.add(txtFilterEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, 130, -1));

        jLabel8.setText("Editorial:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cleanFields(){
        txtAuthor.setText("");
        txtEditorial.setText("");
        txtTitle.setText("");
        tbBooks.clearSelection();
    }
    
    private void btnInsertTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertTitleActionPerformed
        if(!isEditMode){
            if (txtAuthor.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Error: El campo de autor se encuentra vacio.", "Campos Vacios", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (txtEditorial.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Error: El campo de editorial se encuentra vacio.", "Campos Vacios", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (txtTitle.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Error: El nombre del libro se encuentra vacio.", "Campos Vacios", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String authorCode = txtAuthor.getText().trim();
            String titleCode = txtTitle.getText().toLowerCase().trim();
            String editorialCode = txtEditorial.getText().toLowerCase().trim();
            String code = authorCode + titleCode + editorialCode;
            
            if(tndLbrController.getBookMap().containsKey(code)){
                JOptionPane.showMessageDialog(this, "Error: El campo de autor se encuentra vacio.", "Campos Vacios", JOptionPane.ERROR_MESSAGE);
            }else{
                tndLbrController.insertBook(txtAuthor.getText(),txtTitle.getText(),txtEditorial.getText());
            }
            
            ShowBooks();   
        }else{
            isEditMode = false;
            btnInsertTitle.setText("Insertar");
            cleanFields();
        }
    }//GEN-LAST:event_btnInsertTitleActionPerformed

    
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int fila = tbBooks.getSelectedRow();
        if(fila >= 0) {
            int opcion = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar la fila seleccionada?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            String code = tbBooks.getValueAt(fila, 0).toString();
            tndLbrController.removeBook(code);
        } else JOptionPane.showMessageDialog(null, "Por favor seleccione una fila para eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        
        ShowBooks();
        isEditMode = false;
        btnInsertTitle.setText("Insertar");
        cleanFields();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void filterTable() {
            
        List<RowFilter<Object, Object>> filters = new ArrayList<>();

        String text1 = txtFilterAuthor.getText();
        if (!text1.isEmpty()) {
            filters.add(RowFilter.regexFilter("(?i)" + text1, 1)); // Filtro para la columna 1
        }

        String text2 = txtFilterTitle.getText();
        if (!text2.isEmpty()) {
            filters.add(RowFilter.regexFilter("(?i)" + text2, 2)); // Filtro para la columna 2
        }

        String text3 = txtFilterEditorial.getText();
        if (!text3.isEmpty()) {
            filters.add(RowFilter.regexFilter("(?i)" + text3, 3)); // Filtro para la columna 3
        }

        RowFilter<Object, Object> andFilter = RowFilter.andFilter(filters);
        rowSorter.setRowFilter(andFilter);
        
    }
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        int fila = tbBooks.getSelectedRow();
        
        String author = txtAuthor.getText();
        String title = txtTitle.getText();
        String editorial = txtEditorial.getText();
        
        if(isEditMode == true){
            if(fila >= 0) tndLbrController.updateBook(tbBooks.getValueAt(fila, 0).toString(),author,title,editorial );
            else JOptionPane.showMessageDialog(null, "Por favor seleccione una fila para actualizarla", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        ShowBooks();
        
        isEditMode = false;
        btnInsertTitle.setText("Insertar");
        btnInsertTitle.setBackground(null);
        cleanFields();
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TiendaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TiendaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TiendaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TiendaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TiendaLibros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsertTitle;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tbBooks;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtEditorial;
    private javax.swing.JTextField txtFilterAuthor;
    private javax.swing.JTextField txtFilterEditorial;
    private javax.swing.JTextField txtFilterTitle;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
